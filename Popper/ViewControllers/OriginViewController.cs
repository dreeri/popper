// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;

namespace Popper
{
    public partial class OriginViewController : UIViewController
    {
        public OriginViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            AddButtonEvents();
            StyleNavbar();
        }

        void StyleNavbar()
        {
            NavigationController.NavigationBar.TitleTextAttributes = new UIStringAttributes()
            {
                ForegroundColor = UIColor.FromRGB(255, 204, 92),
                Font = UIFont.SystemFontOfSize(24.0f, UIFontWeight.Light)
            };
        }

        void AddButtonEvents()
        {
            Button1.TouchUpInside += (object sender, EventArgs e) =>
            {
                DestinationViewController destination = Storyboard.InstantiateViewController("DestinationViewController") as DestinationViewController;
                NavigationController.PushViewController(destination, true);
            };

            Button2.TouchUpInside += (object sender, EventArgs e) =>
            {
                ModalViewController destination = Storyboard.InstantiateViewController("ModalViewController") as ModalViewController;
                destination.ModalTransitionStyle = UIModalTransitionStyle.CoverVertical;
                NavigationController.PresentViewController(destination, true, null);
            };

            Button3.TouchUpInside += (object sender, EventArgs e) =>
            {
                ModalViewController destination = Storyboard.InstantiateViewController("ModalViewController") as ModalViewController;
                destination.ModalTransitionStyle = UIModalTransitionStyle.FlipHorizontal;
                NavigationController.PresentViewController(destination, true, null);
            };

            Button4.TouchUpInside += (object sender, EventArgs e) =>
            {
                ModalViewController destination = Storyboard.InstantiateViewController("ModalViewController") as ModalViewController;
                destination.ModalTransitionStyle = UIModalTransitionStyle.CrossDissolve;
                NavigationController.PresentViewController(destination, true, null);
            };

            Button5.TouchUpInside += (object sender, EventArgs e) =>
            {
                ModalViewController destination = Storyboard.InstantiateViewController("ModalViewController") as ModalViewController;
                destination.ModalTransitionStyle = UIModalTransitionStyle.PartialCurl;
                NavigationController.PresentViewController(destination, true, null);
            };
        }
    }
}
